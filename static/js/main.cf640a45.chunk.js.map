{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","style","defaultProps","Statistics","good","neutral","bad","total","percentage","list","listItem","FeedbackOptions","options","onLeaveFeedback","buttons","map","option","button","type","name","onClick","Section","title","children","App","useState","state","setState","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,mBCA7DD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,iBCAtED,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,yB,qJCGpBC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGC,UAAWC,IAAMF,QAApB,SAA8BA,KAGhCD,EAAaI,aAAe,CAC1BH,QAAS,IAOID,Q,gBCOAK,EApBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,qBAAIR,UAAWC,IAAMQ,KAArB,UACE,qBAAIT,UAAWC,IAAMS,SAArB,kBAAqCN,KACrC,qBAAIJ,UAAWC,IAAMS,SAArB,qBAAwCL,KACxC,qBAAIL,UAAWC,IAAMS,SAArB,iBAAoCJ,KACpC,qBAAIN,UAAWC,IAAMS,SAArB,mBAAsCH,KACtC,qBAAIP,UAAWC,IAAMS,SAArB,+BAAkDF,EAAlD,W,gBCgBSG,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKb,UAAWC,IAAMa,QAAtB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBACEhB,UAAWC,IAAMgB,OACjBC,KAAK,SAELC,KAAMH,EACNI,QAASP,EALX,SAOGG,GAJIA,S,gBCOAK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIvB,UAAWC,IAAMqB,MAArB,SAA6BA,IAC5BC,MCoDQC,MArDf,WAEE,MAA0BC,mBAAS,CACjCrB,KAAM,EACNC,QAAS,EACTC,IAAK,IAHP,mBAAOoB,EAAP,KAAcC,EAAd,KAMQvB,EAAuBsB,EAAvBtB,KAAMC,EAAiBqB,EAAjBrB,QAASC,EAAQoB,EAARpB,IAQjBsB,EAAqB,WACzB,OAAOxB,EAAOC,EAAUC,GAQpBC,EAAQqB,IACRpB,EANkC,WACtC,IAAMD,EAAQqB,IACd,OAAOrB,EAAQsB,KAAKC,MAAO1B,EAAOG,EAAS,KAAO,EAIjCwB,GACnB,OACE,gCACE,cAAC,EAAD,CAAST,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEV,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAtBgB,SAACmB,GAAD,OACtBL,EAAS,2BACJD,GADG,kBAELM,EAAEC,OAAOd,KAAOO,EAAMM,EAAEC,OAAOd,MAAQ,UAuBxC,cAAC,EAAD,CAASG,MAAO,aAAhB,SACa,IAAVf,EACC,cAAC,EAAD,CAAcR,QAAQ,sBAEtB,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,WAAYA,UCvCT0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf640a45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"listItem\":\"Statistics_listItem__2WUzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__2qTWo\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <p className={style.message}>{message}</p>\n);\n\nNotification.defaultProps = {\n  message: \"\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from \"prop-types\";\nimport style from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\n  return (\n    <ul className={style.list}>\n      <li className={style.listItem}>Good:{good}</li>\n      <li className={style.listItem}>Neutral:{neutral}</li>\n      <li className={style.listItem}>Bad:{bad}</li>\n      <li className={style.listItem}>Total:{total}</li>\n      <li className={style.listItem}>Positive feedback:{percentage}%</li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  percentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport style from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={style.buttons}>\n      {options.map((option) => (\n        <button\n          className={style.button}\n          type=\"button\"\n          key={option}\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport style from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className={style.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { useState } from \"react\";\nimport Notification from \"./components/Notification/Notification\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\n\nfunction App() {\n  \n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const { good, neutral, bad } = state;\n\n  const onLeaveFeedback = (e) =>\n    setState({\n      ...state,\n      [e.target.name]: state[e.target.name] + 1,\n    });\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  const total = countTotalFeedback();\n  const percentage = countPositiveFeedbackPercentage();\n  return (\n    <div>\n      <Section title={\"Please leave feedback\"}>\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n\n      <Section title={\"Statistics\"}>\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            percentage={percentage}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}